name: IT Tests

on:
  workflow_call:
    inputs:
      skipNxCache:
        type: boolean
        default: false
        required: false
        description: Skip the nx cache
      ref:
        type: string
        default: ''
        description: The branch, tag or SHA to checkout.
    secrets:
      NX_CLOUD_ACCESS_TOKEN:
        required: false
        description: Token to use Nx Cloud token
      CODECOV_TOKEN:
        required: false
        description: Token Report to Codecov

env:
  NX_PARALLEL: ${{ vars.NX_PARALLEL }}
  NX_TASK_TARGET_CONFIGURATION: ci
  NX_SKIP_NX_CACHE: ${{ inputs.skipNxCache }}
  YARN_ENABLE_HARDENED_MODE: 0

permissions:
  contents: read

jobs:
  prepare-verdaccio:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  it-tests:
    needs: [prepare-verdaccio]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        packageManager: [yarn, npm]
        testEnvironment: [o3r-project-with-app]
        fastRun:
          - ${{ github.event_name == 'pull_request' && github.base_ref == 'main' }}
        exclude:
          - fastRun: true
            os: windows-latest
          - fastRun: true
            packageManager: yarn
    name: it-tests (${{ matrix.os }}, ${{ matrix.packageManager }}, ${{ matrix.testEnvironment }})
    runs-on: ${{ matrix.os }}
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      ENFORCED_PACKAGE_MANAGER: ${{ matrix.packageManager }}
      PREPARE_TEST_ENV_TYPE: ${{ matrix.testEnvironment }}
    steps:
      - run: exit 1
        name: I shall fail

  conclusion:
    runs-on: ubuntu-latest
    needs: [it-tests]
    if: success() || failure()
    steps:
      - run: |
          echo Finished it-tests with result $OUTPUT, this job is used to give the final status of the matrix. It can be used as required job for branch security.
          if [[ $OUTPUT == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
        env:
          OUTPUT: ${{ needs.it-tests.result }}
